>>> from logic1 import *
>>> from logic1.theories.ZModM import *

>>> from sympy.abc import a, b, c, d

>>> dnf(T)
T

>>> dnf(F)
F

>>> dnf(And(T, T))
T

>>> dnf(Eq(a, 0))
Eq(a, 0)

>>> dnf((Eq(a, 0) | Ne(b, 0)) & (Ne(a, 0) | Eq(b, 0)))
Or(And(Ne(a, 0), Ne(b, 0)), And(Eq(a, 0), Eq(b, 0)))

>>> dnf((Ne(a, 0) | Eq(b, 0)) & (Eq(a, 0) | Eq(b, 0)))
Eq(b, 0)
