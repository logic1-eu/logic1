>>> from logic1 import *
>>> from logic1.theories.ZModM import show_progress, qe, Eq, Ne
>>> import sympy
>>> from sympy.abc import a, b, c, x, y, z

>>> phi_1 = All(x, All(y, Ex(z, Eq(x + y, z))))
>>> qe(phi_1, 2)
T

>>> phi_2 = Ex(x, Eq(a*x, 1))
>>> qe (phi_2, 6)
Or(Eq(a + 5, 0), Eq(2*a + 5, 0), Eq(3*a + 5, 0), Eq(4*a + 5, 0), Eq(5*a + 5, 0))

>>> theta = All(a, Ne(a, 0) >> phi_2)
>>> qe(theta, 3)
T
>>> qe(theta, 4)
F

>>> phi_and = All(x, All(y, Equivalent(Eq(x * y, 1), Eq(x, 1) & Eq(y, 1))))
>>> qe(phi_and, 2)
T

>>> phi_xor = All(x, All(y, Equivalent(Eq(x + y, 1), ~ Equivalent(Eq(x, 1), Eq(y, 1)))))
>>> qe(phi_xor, 2)
T
